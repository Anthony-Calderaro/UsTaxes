[{"C:\\Users\\grims\\github\\OpenTaxes\\src\\index.js":"1","C:\\Users\\grims\\github\\OpenTaxes\\src\\App.js":"2","C:\\Users\\grims\\github\\OpenTaxes\\src\\serviceWorker.js":"3","C:\\Users\\grims\\github\\OpenTaxes\\src\\redux\\store.js":"4","C:\\Users\\grims\\github\\OpenTaxes\\src\\components\\w2.js":"5","C:\\Users\\grims\\github\\OpenTaxes\\src\\redux\\reducer.js":"6","C:\\Users\\grims\\github\\OpenTaxes\\src\\components\\w2EmployerInfo.js":"7","C:\\Users\\grims\\github\\OpenTaxes\\src\\components\\w2EmployeeInfo.js":"8","C:\\Users\\grims\\github\\OpenTaxes\\src\\components\\familyInfo.js":"9","C:\\Users\\grims\\github\\OpenTaxes\\src\\components\\createPDF.js":"10","C:\\Users\\grims\\github\\OpenTaxes\\src\\components\\menu.js":"11","C:\\Users\\grims\\github\\OpenTaxes\\src\\redux\\actions.js":"12","C:\\Users\\grims\\github\\OpenTaxes\\src\\redux\\selectors.js":"13","C:\\Users\\grims\\github\\OpenTaxes\\src\\components\\labeledInput.js":"14","C:\\Users\\grims\\github\\OpenTaxes\\src\\data\\locationPostalCodes.js":"15","C:\\Users\\grims\\github\\OpenTaxes\\src\\data\\countries.js":"16","C:\\Users\\grims\\github\\OpenTaxes\\src\\pdfFiller\\fill1040Fields.js":"17","C:\\Users\\grims\\github\\OpenTaxes\\src\\pdfFiller\\1040flatFieldMappings.js":"18","C:\\Users\\grims\\github\\OpenTaxes\\src\\components\\w2JobInfo.js":"19"},{"size":943,"mtime":1606901144050,"results":"20","hashOfConfig":"21"},{"size":199,"mtime":1606901067686,"results":"22","hashOfConfig":"21"},{"size":5227,"mtime":1606901067669,"results":"23","hashOfConfig":"21"},{"size":546,"mtime":1606901144145,"results":"24","hashOfConfig":"21"},{"size":1776,"mtime":1609300470891,"results":"25","hashOfConfig":"21"},{"size":498,"mtime":1606901144818,"results":"26","hashOfConfig":"21"},{"size":7386,"mtime":1608526179279,"results":"27","hashOfConfig":"21"},{"size":8095,"mtime":1609300479796,"results":"28","hashOfConfig":"21"},{"size":4072,"mtime":1609300430455,"results":"29","hashOfConfig":"21"},{"size":1072,"mtime":1608526179272,"results":"30","hashOfConfig":"21"},{"size":5884,"mtime":1609300895939,"results":"31","hashOfConfig":"21"},{"size":534,"mtime":1608526179284,"results":"32","hashOfConfig":"21"},{"size":286,"mtime":1606901144819,"results":"33","hashOfConfig":"21"},{"size":5159,"mtime":1608527927386,"results":"34","hashOfConfig":"21"},{"size":1377,"mtime":1606901144729,"results":"35","hashOfConfig":"21"},{"size":5164,"mtime":1606901144728,"results":"36","hashOfConfig":"21"},{"size":2586,"mtime":1609062921742,"results":"37","hashOfConfig":"21"},{"size":593,"mtime":1609061010176,"results":"38","hashOfConfig":"21"},{"size":3253,"mtime":1609300501838,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1d9lf1a",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},"C:\\Users\\grims\\github\\OpenTaxes\\src\\index.js",[],["83","84"],"C:\\Users\\grims\\github\\OpenTaxes\\src\\App.js",[],"C:\\Users\\grims\\github\\OpenTaxes\\src\\serviceWorker.js",[],"C:\\Users\\grims\\github\\OpenTaxes\\src\\redux\\store.js",[],"C:\\Users\\grims\\github\\OpenTaxes\\src\\components\\w2.js",[],"C:\\Users\\grims\\github\\OpenTaxes\\src\\redux\\reducer.js",[],"C:\\Users\\grims\\github\\OpenTaxes\\src\\components\\w2EmployerInfo.js",[],"C:\\Users\\grims\\github\\OpenTaxes\\src\\components\\w2EmployeeInfo.js",[],"C:\\Users\\grims\\github\\OpenTaxes\\src\\components\\familyInfo.js",["85"],"import React, { useState } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport { Button, Box } from \"@material-ui/core\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { LabeledInput, LabeledDropdown, LabeledCheckBox } from './labeledInput'\r\nimport { saveFormData } from '../redux/actions'\r\nimport { getFormData } from '../redux/selectors'\r\n\r\nexport default function FamilyInfo() {\r\n    const { register, handleSubmit, errors, control } = useForm()\r\n    const history = useHistory()\r\n    // const variable dispatch to allow use inside function\r\n    const dispatch = useDispatch()\r\n\r\n    const prevFormData = useSelector(state => getFormData(state, \"familyInfo\"))\r\n    const [foreignAddress, setforeignAddress] = useState(prevFormData.foreignAddress === \"true\")\r\n\r\n    // component functions\r\n    const onSubmit = formData => {\r\n        console.log(\"formData: \", formData)\r\n        dispatch(saveFormData(formData, \"familyInfo\"))\r\n        history.push(\"/createPDF\")\r\n    }\r\n\r\n    return (\r\n        <Box display=\"flex\" justifyContent=\"center\">\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                <Box display=\"flex\" justifyContent=\"flex-start\">\r\n                        <h2>Family Information</h2>\r\n                </Box>\r\n\r\n                <LabeledCheckBox\r\n                    foreignAddress={foreignAddress}\r\n                    setforeignAddress={setforeignAddress}\r\n                    control={control}\r\n                    description={\"Do you have a foreign address?\"}\r\n                />\r\n\r\n                <LabeledInput\r\n                    label=\"Bank Routing number\"\r\n                    register={register}\r\n                    required={true}\r\n                    mask={\"999999999\"}\r\n                    pattern={/[0-9]{9}/}\r\n                    patternDescription={\"Input should be filled with 10 numbers\"}\r\n                    name=\"routingNumber\"\r\n                    defaultValue={prevFormData[\"routingNumber\"]}\r\n                    errors={errors}\r\n                />\r\n\r\n                <LabeledInput\r\n                    label=\"Bank Account number\"\r\n                    register={register}\r\n                    required={true}\r\n                    mask={\"999999999999\"}\r\n                    pattern={/[0-9]{10}|[0-9]{11}|[0-9]{12}/}\r\n                    patternDescription={\"Input should be filled with 10-12 numbers\"}\r\n                    name=\"accountNumber\"\r\n                    defaultValue={prevFormData[\"accountNumber\"]}\r\n                    errors={errors}\r\n                />\r\n\r\n                <LabeledInput\r\n                    label=\"Contact phone number\"\r\n                    register={register}\r\n                    required={true}\r\n                    mask={\"999-999-9999\"}\r\n                    pattern={/[0-9]{3}-[0-9]{3}-[0-9]{4}/}\r\n                    patternDescription={\"Input should be filled with 10 numbers\"}\r\n                    name=\"contactPhoneNumber\"\r\n                    defaultValue={prevFormData[\"contactPhoneNumber\"]}\r\n                    errors={errors}\r\n                />\r\n\r\n                <LabeledInput\r\n                    label=\"Contact email address\"\r\n                    register={register}\r\n                    required={true}\r\n                    name={\"contactEmail\"}\r\n                    defaultValue={prevFormData[\"contactEmail\"]}\r\n                    errors={errors}\r\n                />\r\n\r\n                <Box display=\"flex\" justifyContent=\"flex-start\" paddingTop={2} paddingBottom={1}>\r\n                    <Box display=\"flex\" justifyContent=\"flex-start\" paddingRight={2}>\r\n                        <Button component={Link} to={\"w2jobinfo\"} variant=\"contained\" color=\"secondary\" >\r\n                            Back\r\n                        </Button>\r\n                    </Box>\r\n\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                        Save and Continue\r\n                    </Button>\r\n                </Box>\r\n            </form>\r\n        </Box>\r\n    )\r\n}","C:\\Users\\grims\\github\\OpenTaxes\\src\\components\\createPDF.js",[],"C:\\Users\\grims\\github\\OpenTaxes\\src\\components\\menu.js",[],"C:\\Users\\grims\\github\\OpenTaxes\\src\\redux\\actions.js",[],"C:\\Users\\grims\\github\\OpenTaxes\\src\\redux\\selectors.js",[],"C:\\Users\\grims\\github\\OpenTaxes\\src\\components\\labeledInput.js",[],"C:\\Users\\grims\\github\\OpenTaxes\\src\\data\\locationPostalCodes.js",[],"C:\\Users\\grims\\github\\OpenTaxes\\src\\data\\countries.js",[],"C:\\Users\\grims\\github\\OpenTaxes\\src\\pdfFiller\\fill1040Fields.js",["86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102"],"import fetch from 'node-fetch'\r\nimport {\r\n    drawImage,\r\n    drawLinesOfText,\r\n    drawRectangle,\r\n    drawText,\r\n    PDFArray,\r\n    PDFContentStream,\r\n    PDFDictionary,\r\n    PDFDocument,\r\n    PDFDocumentFactory,\r\n    PDFDocumentWriter,\r\n    PDFIndirectReference,\r\n    PDFName,\r\n    PDFNumber,\r\n    PDFRawStream,\r\n    PDFString,\r\n    PDFBool,\r\n    PDFDict,\r\n    PDFField,\r\n    PDFCheckBox,\r\n    PDFAcroForm,\r\n    PDFTextField,\r\n    StandardFonts\r\n} from 'pdf-lib'\r\nimport flatFieldMappings from './1040flatFieldMappings'\r\nimport { getAllDataFlat } from '../redux/selectors'\r\nimport { store } from '../redux/store';\r\n\r\nfunction fillPDField(\r\n    PDField,\r\n    text,\r\n) {\r\n    if (PDField instanceof PDFTextField){\r\n        PDField.acroField.dict.dict.set(PDFName.of('DA'), PDFString.of(\"/HelveticaLTStd-Bold 12.00 Tf\"))\r\n        PDField.setText(text)\r\n        // PDField.disableCombing()\r\n        // console.log(PDField)\r\n    } else if (PDField instanceof PDFCheckBox){\r\n        PDField.check()\r\n    }\r\n};\r\n\r\n// returns PDFDocument in the form of a Uint8Array\r\n// I'm using my repo's github pages hosting as a CDN because it's free and allows cross origin requests\r\nexport async function fillPDF() {\r\n    const information = getAllDataFlat(store.getState())\r\n\r\n    console.log(getAllDataFlat(store.getState()))\r\n\r\n    const pdfDoc = await PDFDocument.load(await fetch('https://thegrims.github.io/UsTaxes/tax_forms/f1040.pdf').then(res => res.arrayBuffer()))\r\n    // const timesRoman = await pdfDoc.embedFont(StandardFonts.TimesRoman)\r\n    \r\n    const formFields = pdfDoc.getForm().getFields()\r\n    // fill fields with fieldNumber\r\n    formFields.forEach((PDField, index) => { if (PDField instanceof PDFTextField) {PDField.setText(index.toString())}})\r\n    // check all boxes\r\n    formFields.forEach((PDField, index) => { if (PDField instanceof PDFCheckBox) {PDField.check()}})\r\n    console.log(formFields)\r\n\r\n    Object.keys(flatFieldMappings).forEach(\r\n        key => information[key] && \r\n        fillPDField(\r\n            formFields[\r\n                flatFieldMappings[key]\r\n            ], \r\n            information[key]\r\n        )\r\n    )\r\n    formFields.forEach(formField => formField.enableReadOnly())\r\n    \r\n    const pdfBytes = await pdfDoc.save();\r\n    return pdfBytes\r\n}\r\n\r\n// opens new with filled information in the window of the component it is called from\r\nexport async function createPDFPopup () {\r\n    const PDF = await fillPDF()\r\n    const blob = new Blob([PDF], { type: 'application/pdf' });\r\n    const blobURL = URL.createObjectURL(blob);\r\n    window.open(blobURL)\r\n}","C:\\Users\\grims\\github\\OpenTaxes\\src\\pdfFiller\\1040flatFieldMappings.js",[],["103","104"],"C:\\Users\\grims\\github\\OpenTaxes\\src\\components\\w2JobInfo.js",["105","106","107","108","109"],"import React, { useState } from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport { Button, Box, Grow } from \"@material-ui/core\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { LabeledInput, LabeledDropdown, LabeledCheckBox } from './labeledInput'\r\nimport { saveFormData } from '../redux/actions'\r\nimport { getFormData } from '../redux/selectors'\r\n\r\nexport default function W2JobInfo() {\r\n    const { register, handleSubmit, errors, control } = useForm()\r\n    const history = useHistory()\r\n    // const variable dispatch to allow use inside function\r\n    const dispatch = useDispatch()\r\n\r\n    const prevFormData = useSelector(state => getFormData(state, \"W2JobInfo\"))\r\n\r\n    // component functions\r\n    const onSubmit = formData => {\r\n        console.log(\"formData: \", formData)\r\n        dispatch(saveFormData(formData, \"W2JobInfo\"))\r\n        history.push(\"/familyinfo\")\r\n    }\r\n\r\n    return (\r\n        <Box display=\"flex\" justifyContent=\"center\">\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n\r\n                <Box display=\"flex\" justifyContent=\"flex-start\">\r\n                        <h2>Job Information</h2>\r\n                </Box>\r\n                \r\n                <LabeledInput\r\n                    label=\"Occupation\"\r\n                    register={register}\r\n                    required={true}\r\n                    name={\"occupation\"}\r\n                    defaultValue={prevFormData[\"occupation\"]}\r\n                    errors={errors}\r\n                />\r\n\r\n                <LabeledInput\r\n                    strongLabel=\"Box 1 - \"\r\n                    label=\"Wages, tips, other compensation\"\r\n                    register={register}\r\n                    required={true}\r\n                    mask={\"$999999\"}\r\n                    pattern={/[0-9]*/}\r\n                    patternDescription={\"Input should be filled with numbers only\"}\r\n                    name=\"income\"\r\n                    defaultValue={prevFormData[\"income\"]}\r\n                    errors={errors}\r\n                />\r\n\r\n                <LabeledInput\r\n                    strongLabel=\"Box 2 - \"\r\n                    label=\"Federal income tax withheld\"\r\n                    register={register}\r\n                    required={true}\r\n                    mask={\"$999999\"}\r\n                    pattern={/[0-9]*/}\r\n                    patternDescription={\"Input should be filled with numbers only\"}\r\n                    name=\"federalIncomeTax\"\r\n                    defaultValue={prevFormData[\"federalIncomeTax\"]}\r\n                    errors={errors}\r\n                />\r\n\r\n                <Box display=\"flex\" justifyContent=\"flex-start\" paddingTop={2} paddingBottom={1}>\r\n                    <Box display=\"flex\" justifyContent=\"flex-start\" paddingRight={2}>\r\n                        <Button component={Link} to={\"w2employeeinfo\"} variant=\"contained\" color=\"secondary\" >\r\n                            Back\r\n                        </Button>\r\n                    </Box>\r\n\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                        Save and Continue\r\n                    </Button>\r\n                </Box>\r\n            </form>\r\n        </Box>\r\n    )\r\n}",{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":7,"column":24,"nodeType":"116","messageId":"117","endLine":7,"endColumn":39},{"ruleId":"114","severity":1,"message":"118","line":3,"column":5,"nodeType":"116","messageId":"117","endLine":3,"endColumn":14},{"ruleId":"114","severity":1,"message":"119","line":4,"column":5,"nodeType":"116","messageId":"117","endLine":4,"endColumn":20},{"ruleId":"114","severity":1,"message":"120","line":5,"column":5,"nodeType":"116","messageId":"117","endLine":5,"endColumn":18},{"ruleId":"114","severity":1,"message":"121","line":6,"column":5,"nodeType":"116","messageId":"117","endLine":6,"endColumn":13},{"ruleId":"114","severity":1,"message":"122","line":7,"column":5,"nodeType":"116","messageId":"117","endLine":7,"endColumn":13},{"ruleId":"114","severity":1,"message":"123","line":8,"column":5,"nodeType":"116","messageId":"117","endLine":8,"endColumn":21},{"ruleId":"114","severity":1,"message":"124","line":9,"column":5,"nodeType":"116","messageId":"117","endLine":9,"endColumn":18},{"ruleId":"114","severity":1,"message":"125","line":11,"column":5,"nodeType":"116","messageId":"117","endLine":11,"endColumn":23},{"ruleId":"114","severity":1,"message":"126","line":12,"column":5,"nodeType":"116","messageId":"117","endLine":12,"endColumn":22},{"ruleId":"114","severity":1,"message":"127","line":13,"column":5,"nodeType":"116","messageId":"117","endLine":13,"endColumn":25},{"ruleId":"114","severity":1,"message":"128","line":15,"column":5,"nodeType":"116","messageId":"117","endLine":15,"endColumn":14},{"ruleId":"114","severity":1,"message":"129","line":16,"column":5,"nodeType":"116","messageId":"117","endLine":16,"endColumn":17},{"ruleId":"114","severity":1,"message":"130","line":18,"column":5,"nodeType":"116","messageId":"117","endLine":18,"endColumn":12},{"ruleId":"114","severity":1,"message":"131","line":19,"column":5,"nodeType":"116","messageId":"117","endLine":19,"endColumn":12},{"ruleId":"114","severity":1,"message":"132","line":20,"column":5,"nodeType":"116","messageId":"117","endLine":20,"endColumn":13},{"ruleId":"114","severity":1,"message":"133","line":22,"column":5,"nodeType":"116","messageId":"117","endLine":22,"endColumn":16},{"ruleId":"114","severity":1,"message":"134","line":24,"column":5,"nodeType":"116","messageId":"117","endLine":24,"endColumn":18},{"ruleId":"110","replacedBy":"135"},{"ruleId":"112","replacedBy":"136"},{"ruleId":"114","severity":1,"message":"137","line":1,"column":17,"nodeType":"116","messageId":"117","endLine":1,"endColumn":25},{"ruleId":"114","severity":1,"message":"138","line":3,"column":23,"nodeType":"116","messageId":"117","endLine":3,"endColumn":27},{"ruleId":"114","severity":1,"message":"115","line":7,"column":24,"nodeType":"116","messageId":"117","endLine":7,"endColumn":39},{"ruleId":"114","severity":1,"message":"139","line":7,"column":41,"nodeType":"116","messageId":"117","endLine":7,"endColumn":56},{"ruleId":"114","severity":1,"message":"140","line":12,"column":45,"nodeType":"116","messageId":"117","endLine":12,"endColumn":52},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'LabeledDropdown' is defined but never used.","Identifier","unusedVar","'drawImage' is defined but never used.","'drawLinesOfText' is defined but never used.","'drawRectangle' is defined but never used.","'drawText' is defined but never used.","'PDFArray' is defined but never used.","'PDFContentStream' is defined but never used.","'PDFDictionary' is defined but never used.","'PDFDocumentFactory' is defined but never used.","'PDFDocumentWriter' is defined but never used.","'PDFIndirectReference' is defined but never used.","'PDFNumber' is defined but never used.","'PDFRawStream' is defined but never used.","'PDFBool' is defined but never used.","'PDFDict' is defined but never used.","'PDFField' is defined but never used.","'PDFAcroForm' is defined but never used.","'StandardFonts' is defined but never used.",["141"],["142"],"'useState' is defined but never used.","'Grow' is defined but never used.","'LabeledCheckBox' is defined but never used.","'control' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]